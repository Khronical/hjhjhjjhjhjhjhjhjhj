    local plr = game.Players.LocalPlayer
    local camera = game.Workspace.CurrentCamera

    for i, v in pairs(game.Players:GetChildren()) do
        local targetB = v.Name

        local Top = Drawing.new("Line")
        Top.Visible = _G.BoxVis
        Top.From = Vector2.new(0, 0)
        Top.To = Vector2.new(200, 200)
        Top.Color = Color3.fromRGB(0, 255, 0)
        Top.Thickness = 2
        Top.Transparency = 1

        local Bottom = Drawing.new("Line")
        Bottom.Visible = _G.BoxVis
        Bottom.From = Vector2.new(0, 0)
        Bottom.To = Vector2.new(200, 200)
        Bottom.Color = Color3.fromRGB(0, 255, 0)
        Bottom.Thickness = 2
        Bottom.Transparency = 1

        local Left = Drawing.new("Line")
        Left.Visible = _G.BoxVis
        Left.From = Vector2.new(0, 0)
        Left.To = Vector2.new(200, 200)
        Left.Color = Color3.fromRGB(0, 255, 0)
        Left.Thickness = 2
        Left.Transparency = 1

        local Right = Drawing.new("Line")
        Right.Visible = _G.BoxVis
        Right.From = Vector2.new(0, 0)
        Right.To = Vector2.new(200, 200)
        Right.Color = Color3.fromRGB(0, 255, 0)
        Right.Thickness = 2
        Right.Transparency = 1

        function ESP()
            local connection
            connection = game:GetService("RunService").RenderStepped:Connect(function()
                if v.Character ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v.Name ~= plr.Name  and v.Character.Humanoid.Health > 0 then
                    local ScreenPos, OnScreen = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    if OnScreen then
                        local Scale = v.Character.Head.Size.Y/2
                        local Size = Vector3.new(2, 3, 0) * (Scale * 2)
                        local humpos = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                        local TL = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, 0)).p)
                        local TR = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, 0)).p)
                        local BL = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, 0)).p)
                        local BR = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, 0)).p)

                        Top.From = Vector2.new(TL.X, TL.Y)
                        Top.To = Vector2.new(TR.X, TR.Y)

                        Left.From = Vector2.new(TL.X, TL.Y)
                        Left.To = Vector2.new(BL.X, BL.Y)

                        Right.From = Vector2.new(TR.X, TR.Y)
                        Right.To = Vector2.new(BR.X, BR.Y)

                        Bottom.From = Vector2.new(BL.X, BL.Y)
                        Bottom.To = Vector2.new(BR.X, BR.Y)

                        if game.Workspace.GameState.Statistics[targetB]["Players Killed"].Value > 0 then
                            Top.Color = Color3.fromRGB(255, 157, 0)
                            Left.Color = Color3.fromRGB(255, 157, 0)
                            Bottom.Color = Color3.fromRGB(2255, 157, 0)
                            Right.Color = Color3.fromRGB(255, 157, 0)
                        else 
                            Top.Color = Color3.fromRGB(255, 255, 255)
                            Left.Color = Color3.fromRGB(255, 255, 255)
                            Bottom.Color = Color3.fromRGB(255, 255, 255)
                            Right.Color = Color3.fromRGB(255, 255, 255)
                        end

                        Top.Visible = _G.TT
                        Left.Visible = _G.TT
                        Bottom.Visible = _G.TT
                        Right.Visible = _G.TT
                    else 
                        Top.Visible = _G.FF
                        Left.Visible = _G.FF
                        Bottom.Visible = _G.FF
                        Right.Visible = _G.FF
                    end
                else 
                    Top.Visible = _G.FF
                    Left.Visible = _G.FF
                    Bottom.Visible = _G.FF
                    Right.Visible = _G.FF
                end
            end)
        end
        coroutine.wrap(ESP)()
    end

    game.Players.PlayerAdded:Connect(function(newplr)
        local Top = Drawing.new("Line")
        Top.Visible = _G.BoxVis
        Top.From = Vector2.new(0, 0)
        Top.To = Vector2.new(200, 200)
        Top.Color = Color3.fromRGB(255, 0, 0)
        Top.Thickness = 2
        Top.Transparency = 1

        local Bottom = Drawing.new("Line")
        Bottom.Visible = _G.BoxVis
        Bottom.From = Vector2.new(0, 0)
        Bottom.To = Vector2.new(200, 200)
        Bottom.Color = Color3.fromRGB(255, 0, 0)
        Bottom.Thickness = 2
        Bottom.Transparency = 1

        local Left = Drawing.new("Line")
        Left.Visible = _G.BoxVis
        Left.From = Vector2.new(0, 0)
        Left.To = Vector2.new(200, 200)
        Left.Color = Color3.fromRGB(255, 0, 0)
        Left.Thickness = 2
        Left.Transparency = 1

        local Right = Drawing.new("Line")
        Right.Visible = _G.BoxVis
        Right.From = Vector2.new(0, 0)
        Right.To = Vector2.new(200, 200)
        Right.Color = Color3.fromRGB(255, 0, 0)
        Right.Thickness = 2
        Right.Transparency = 1

        function ESP()
            local connection
            connection = game:GetService("RunService").RenderStepped:Connect(function()
                if newplr.Character ~= nil and newplr.Character:FindFirstChild("HumanoidRootPart") ~= nil and newplr.Name ~= plr.Name  and newplr.Character.Humanoid.Health > 0 then
                    local ScreenPos, OnScreen = camera:WorldToViewportPoint(newplr.Character.HumanoidRootPart.Position)
                    if OnScreen then
                        local Scale = newplr.Character.Head.Size.Y/2
                        local Size = Vector3.new(2, 3, 0) * (Scale * 2)
                        local humpos = camera:WorldToViewportPoint(newplr.Character.HumanoidRootPart.Position)
                        local TL = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, 0)).p)
                        local TR = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, 0)).p)
                        local BL = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, 0)).p)
                        local BR = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, 0)).p)

                        Top.From = Vector2.new(TL.X, TL.Y)
                        Top.To = Vector2.new(TR.X, TR.Y)

                        Left.From = Vector2.new(TL.X, TL.Y)
                        Left.To = Vector2.new(BL.X, BL.Y)

                        Right.From = Vector2.new(TR.X, TR.Y)
                        Right.To = Vector2.new(BR.X, BR.Y)

                        Bottom.From = Vector2.new(BL.X, BL.Y)
                        Bottom.To = Vector2.new(BR.X, BR.Y)

                        if game.Workspace.GameState.Statistics[newplr]["Players Killed"].Value > 0 then
                            Top.Color = Color3.fromRGB(255, 157, 0)
                            Left.Color = Color3.fromRGB(255, 157, 0)
                            Bottom.Color = Color3.fromRGB(2255, 157, 0)
                            Right.Color = Color3.fromRGB(255, 157, 0)
                        else 
                            Top.Color = Color3.fromRGB(255, 255, 255)
                            Left.Color = Color3.fromRGB(255, 255, 255)
                            Bottom.Color = Color3.fromRGB(255, 255, 255)
                            Right.Color = Color3.fromRGB(255, 255, 255)
                        end

                        Top.Visible = _G.TT
                        Left.Visible = _G.TT
                        Bottom.Visible = _G.TT
                        Right.Visible = _G.TT
                    else 
                        Top.Visible = _G.FF
                        Left.Visible = _G.FF
                        Bottom.Visible = _G.FF
                        Right.Visible = _G.FF
                    end
                else 
                    Top.Visible = _G.FF
                    Left.Visible = _G.FF
                    Bottom.Visible = _G.FF
                    Right.Visible = _G.FF
                    if game.Players:FindFirstChild(newplr.Name) == nil then
                        connection:Disconnect()
                    end
                end
            end)
        end
        coroutine.wrap(ESP)()
    end)

---Statistics & Item ESP
local itemA = "none"
local itemB = "none"
local itemC = "none"

local ActiveItem = "none"

for i, v in pairs(game.Players:GetChildren()) do
    local NameMarker = Instance.new("BillboardGui")
    local PlayerName = Instance.new("TextLabel")
    local PlayerInv = Instance.new("TextLabel")
    local targetC = v.Name
    
    NameMarker.Name = "NameMarker"
    NameMarker.Parent = game.Workspace[targetC].Head
    NameMarker.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    NameMarker.Active = true
    NameMarker.AlwaysOnTop = true
    NameMarker.LightInfluence = 1.000
    NameMarker.Size = UDim2.new(0, 350, 0, 100)
    
    PlayerName.Name = "PlayerName"
    PlayerName.Parent = NameMarker
    PlayerName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    PlayerName.BackgroundTransparency = 1.000
    PlayerName.BorderSizePixel = 2
    PlayerName.Size = UDim2.new(0, 350, 0, 50)
    PlayerName.Font = Enum.Font.SourceSans
    PlayerName.TextColor3 = Color3.fromRGB(255, 255, 255)
    PlayerName.Text = v.Name.." | Kills: ".. game.Workspace.GameState.Statistics[v.Name]["Players Killed"].Value.. " | Health: ".. v.Character.Humanoid.Health
    PlayerName.TextSize = 25.000
    PlayerName.TextStrokeTransparency = 0.500
    PlayerName.Visible = _G.MainVis

    PlayerInv.Name = "PlayerInv"
    PlayerInv.Parent = NameMarker
    PlayerInv.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    PlayerInv.BackgroundTransparency = 1
    PlayerInv.BorderSizePixel = 2
    PlayerInv.Size = UDim2.new(0, 350, 0, 2)
    PlayerInv.Font = Enum.Font.SourceSans
    PlayerInv.TextColor3 = Color3.fromRGB(255, 255, 255)
    PlayerInv.Text = "none | none | none"
    PlayerInv.TextSize = 25
    PlayerInv.TextStrokeTransparency = 0.5
    PlayerInv.Visible = _G.InvVis
    
    game:GetService("RunService").RenderStepped:Connect(function()
        PlayerName.Visible = _G.MainVis

        PlayerInv.Visible = _G.InvVis

        for i, v in pairs(game.Workspace[v.Name]:GetDescendants()) do
            if v:IsA("Tool") then
                ActiveItem = v.Name
            end
        end

        PlayerName.Text = v.Name.." | Kills: ".. game.Workspace.GameState.Statistics[v.Name]["Players Killed"].Value.." | Holding: ".. ActiveItem.." | Health: ".. v.Character.Humanoid.Health

        if game.Workspace.GameState.Statistics[targetC]["Players Killed"].Value > 0 then
            PlayerName.TextColor3 = Color3.new(255, 157, 0)
            PlayerInv.TextColor3 = Color3.new(255, 157, 0)
        else
            PlayerName.TextColor3 = Color3.new(255, 255, 255)
            PlayerInv.TextColor3 = Color3.new(255, 255, 255)
        end

        for i, v in pairs(v.Backpack:GetChildren()) do
            if i == 1 then
                itemA = v.Name
            end
            if i == 2 then
                    itemB = v.Name
            end
            if i == 3 then
                    itemC = v.Name
            end
        end

        if v.Backpack:FindFirstChild(itemA) then
            print("A")
        else    
            itemA = "none"
        end
                
        if v.Backpack:FindFirstChild(itemB) then
            print("B")
        else    
            itemB = "none"
        end
            
        if v.Backpack:FindFirstChild(itemC) then
            print("C")
        else
            itemC = "none"
        end
            
        if v.Backpack:FindFirstChild(ActiveItem) then
            print("D")
        else    
            ActiveItem = "none"
        end
    
        PlayerInv.Text = itemA.. " | ".. itemB.. " | ".. itemC

    end)
end

game.Players.PlayerAdded:Connect(function(newplr)
    local NameMarker = Instance.new("BillboardGui")
    local PlayerName = Instance.new("TextLabel")
    local PlayerInv = Instance.new("TextLabel")
    local targetC = newplr
    
    NameMarker.Name = "NameMarker"
    NameMarker.Parent = game.Workspace[targetC].Head
    NameMarker.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    NameMarker.Active = true
    NameMarker.AlwaysOnTop = true
    NameMarker.LightInfluence = 1.000
    NameMarker.Size = UDim2.new(0, 350, 0, 100)
    
    PlayerName.Name = "PlayerName"
    PlayerName.Parent = NameMarker
    PlayerName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    PlayerName.BackgroundTransparency = 1.000
    PlayerName.BorderSizePixel = 2
    PlayerName.Size = UDim2.new(0, 350, 0, 50)
    PlayerName.Font = Enum.Font.SourceSans
    PlayerName.TextColor3 = Color3.fromRGB(255, 255, 255)
    PlayerName.Text = v.Name.." | Kills: ".. game.Workspace.GameState.Statistics[v.Name]["Players Killed"].Value.. " | Health: ".. v.Character.Humanoid.Health
    PlayerName.TextSize = 25.000
    PlayerName.TextStrokeTransparency = 0.500

    PlayerInv.Name = "PlayerInv"
    PlayerInv.Parent = NameMarker
    PlayerInv.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    PlayerInv.BackgroundTransparency = 1
    PlayerInv.BorderSizePixel = 2
    PlayerInv.Size = UDim2.new(0, 350, 0, 2)
    PlayerInv.Font = Enum.Font.SourceSans
    PlayerInv.TextColor3 = Color3.fromRGB(255, 255, 255)
    PlayerInv.Text = "none | none | none"
    PlayerInv.TextSize = 25
    PlayerInv.TextStrokeTransparency = 0.5
    
    game:GetService("RunService").RenderStepped:Connect(function()
        for i, v in pairs(game.Workspace[v.Name]:GetDescendants()) do
            if v:IsA("Tool") then
                ActiveItem = v.Name
            end
        end

        PlayerName.Text = newplr.Name.." | Kills: ".. game.Workspace.GameState.Statistics[newplr]["Players Killed"].Value.." | Holding: ".. ActiveItem.." | Health: ".. newplr.Character.Humanoid.Health

        if game.Workspace.GameState.Statistics[targetC]["Players Killed"].Value > 0 then
            PlayerName.TextColor3 = Color3.new(255, 157, 0)
            PlayerInv.TextColor3 = Color3.new(255, 157, 0)
        else
            PlayerName.TextColor3 = Color3.new(255, 255, 255)
            PlayerInv.TextColor3 = Color3.new(255, 255, 255)
        end

        for i, v in pairs(v.Backpack:GetChildren()) do
            if i == 1 then
                itemA = v.Name
            end
            if i == 2 then
                    itemB = v.Name
            end
            if i == 3 then
                    itemC = v.Name
            end
        end

        if v.Backpack:FindFirstChild(itemA) then
            print("A")
        else    
            itemA = "none"
        end
                
        if v.Backpack:FindFirstChild(itemB) then
            print("B")
        else    
            itemB = "none"
        end
            
        if v.Backpack:FindFirstChild(itemC) then
            print("C")
        else
            itemC = "none"
        end
            
        if v.Backpack:FindFirstChild(ActiveItem) then
            print("D")
        else    
            ActiveItem = "none"
        end
    
        PlayerInv.Text = itemA.. " | ".. itemB.. " | ".. itemC
    end)
end)
